# GoReleaser configuration for building cross-platform binaries
# Documentation: https://goreleaser.com
version: 2

before:
  hooks:
    # Clean up any previous builds
    - go mod tidy
    # Generate any required files (if needed)
    # - go generate ./...

builds:
  - id: "default"
    # Binary name (will use repository name by default)
    binary: "{{ .ProjectName }}"

    # Entry point for the application
    main: ./cmd/crawler

    # Target environments
    goos:
      - linux
      - windows
      - darwin

    goarch:
      - amd64
      - arm64

    # Environment variables for the build
    env:
      - CGO_ENABLED=0

    # Build flags
    flags:
      - -trimpath

    # Linker flags for smaller binaries and version info
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser

archives:
  - id: "default"

    # Archive name template
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

    # Files to include in archives
    files:
      - README.md
      - LICENSE

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^style:"
      - Merge pull request
      - Merge branch
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999

# GitHub release configuration
release:
  # Create a draft release
  draft: false

  # Mark as pre-release if version contains pre-release identifiers
  prerelease: auto

  # Release name template
  name_template: "Release {{.Version}}"

  # Release body template
  header: |
    ## Release {{.Version}}

    Welcome to this new release!

# Docker images
dockers:
  - image_templates:
      - "ghcr.io/benvon/{{ .ProjectName }}:{{ .Version }}"
      - "ghcr.io/benvon/{{ .ProjectName }}:latest"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
  - image_templates:
      - "ghcr.io/benvon/{{ .ProjectName }}:{{ .Version }}-arm64"
      - "ghcr.io/benvon/{{ .ProjectName }}:latest-arm64"
    dockerfile: Dockerfile
    use: buildx
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
